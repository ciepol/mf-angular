"use strict";var app=angular.module("mfAngularApp",["ngRoute","ui.bootstrap"]);app.config(["$routeProvider","$locationProvider",function(a,b){var c={site:["DataService",function(a){return console.log("resolving data service int..."),a.init()}]};a.when("/edit/:lang/:url/:container?/:widget?",{templateUrl:"/views/edit.html",controller:"PageCtrl",resolve:c}).when("/edit",{redirectTo:"/edit/pl/home"}).when("/add/:lang/:url/:container?/:widget?",{templateUrl:"/views/edit.html",controller:"AddCtrl",resolve:c}).when("/add",{redirectTo:"/add/pl/home"}).when("/:lang/:url",{templateUrl:"/views/preview.html",controller:"PageCtrl",resolve:c}).otherwise({redirectTo:"/pl/home"}),b.html5Mode(!0)}]),app.run(["$rootScope","$location","DataService",function(a,b,c){a.settings={},a.loading=!1,a.$on("$routeChangeStart",function(){a.loading=!0}),a.$on("$routeChangeSuccess",function(d,e){console.log("[run] route change"),console.log(e),a.loading=!1,a.settings.editorMode=0==b.path().search(/\/edit\/|\/add\//),a.site=c.getSite(),a.currentPage=e.params.url,a.currentLang=e.params.lang,a.title=a.site.pages[a.currentPage].name})}]),app.service("ExtrasService",["$rootScope",function(){return{guid:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(a){var b=16*Math.random()|0,c="x"==a?b:3&b|8;return c.toString(16)})}}}]),app.service("EditorDataService",["$rootScope","$http","$q",function(a,b,c){var d=function(a,b){for(var c in a)e[b]=a},e={widgets:null,languages:null,getAllData:function(){if(this.widgets&&this.languages)return c.when(!0);var a=[];return a.push(b({method:"GET",url:"/data/widgets.json"}).success(function(a){d(a,"widgets"),console.log("------------------------------g----------"),console.log(e.widgets)})),a.push(b({method:"GET",url:"/data/languages.json"}).success(function(a){d(a[0],"languages"),console.log("------------------------------g----------"),console.log(e.languages)})),c.all(a)},debugEditor:function(){console.log(this.widgets),console.log(this.languages)}};return e}]),app.service("DataService",["$rootScope","$http","$route","$routeParams","$q","$window","ExtrasService",function(a,b,c,d,e,f,g){var h=this;return h.site=null,h._replaceElementWithArray=function(a,b,c){a.splice(c,1);for(var d=b.length-1;d>=0;d--)a.splice(c,0,b[d]);return a},h._findCustomContainerIndex=function(a){for(var a=a||h.site.containers,b=-1,c=0;c<a.length;c++)if(!a[c].layout){b=c;break}return b},h._translateContainerIndex=function(a,b){for(var c=h._findCustomContainerIndex(h.site.containers),d=h.site.pages[b].containers.length,e=[],f=0;c>f;f++)e.push([f,!0]);for(var f=0;d>f;f++)e.push([f,!1]);for(var f=c+1;f<h.site.containers.length;f++)e.push([f,!0]);return e[a]},h._selectContainer=function(){},h._addIndexes=function(a){for(var b=0;b<a.length;b++)a[b].id=b;return a},h._addAllIndexes=function(a){h._addIndexes(a);for(var b=0;b<a.length;b++)h._addIndexes(a[b].widgets);return a},{init:function(){console.log("[DataService] init called");var a;return h.site?(console.log("[DataService] init - site already inited"),a=e.when(!0)):(console.log("[DataService] init - fetching JSON data"),a=b.get("/data/data.json").success(function(a){console.log("[DataService] init - JSON success"),console.log(a[0]),h.site=a[0]})),a},getSite:function(){return console.log("[DataService] getting site"),console.log(h.site),h.site},getContainers:function(a){var b=angular.copy(h.site.containers),c=angular.copy(h.site.pages[a].containers),d=h._findCustomContainerIndex(b);if(d>-1)return h._replaceElementWithArray(b,c,d);throw"custom container not found!"},addContainer:function(){h.site.containers.push({guid:g.guid(),layout:!0,row:!0,widgets:[]}),console.log("[DataService] container added"),c.reload()},removeContainer:function(a,b){var d=h._translateContainerIndex(a,b);d[1]?(console.log(h.site.containers),h.site.containers.splice(d[0],1),console.log(h.site.containers),console.log("[DataService] container removed from layout containers")):(console.log(h.site.pages[b].containers),h.site.pages[b].containers.splice(d[0],1),console.log(h.site.pages[b].containers),console.log("[DataService] container removed from page containers")),c.reload()},setAsCustomContainer:function(a,b){var d=h._translateContainerIndex(a,b);if(console.log(h.site.containers),console.log(d),!d[1])throw"It's not layout container. Only layout containers can be changed to page containers!";console.log(h.site.containers[d[0]]);var e=h._findCustomContainerIndex();h.site.containers[e].layout=!0,h.site.containers[e].row=!0,h.site.containers[e].widgets=[],h.site.containers[e].guid=g.guid(),h.site.containers[d[0]].layout=!1,delete h.site.containers[d[0]].row,delete h.site.containers[d[0]].widgets,delete h.site.containers[d[0]].guid,console.log(h.site.containers[d[0]]),console.log(h.site.containers),c.reload()},setRow:function(a,b,d){var e=h._translateContainerIndex(b,d);e[1]?h.site.containers[e[0]].row=a:h.site.pages[d].containers[e[0]].row=a,c.reload(),console.log("container "+b+" is now "+(a?"row":"column"))},appendWidget:function(a,b,c,d){var e=h._translateContainerIndex(a,c);if(e[1]){var d=d||h.site.containers[e[0]].widgets.length;if(d>h.site.containers[e[0]].widgets.length)throw"[appendWidget error] Position higher than containers array";h.site.containers[e[0]].widgets.splice(d,0,b)}else{var d=d||h.site.pages[c].containers[e[0]].widgets.length;if(d>h.site.pages[c].containers[e[0]].widgets.length)throw"[appendWidget error] Position higher than containers array";h.site.pages[c].containers[e[0]].widgets.splice(d,0,b)}console.log("widget added")},removeWidget:function(a,b,d){var e=h._translateContainerIndex(b,d);e[1]?(console.log(h.site.containers[e[0]].widgets[a]),h.site.containers[e[0]].widgets.splice(a,1)):(console.log(h.site.pages[d].containers[e[0]].widgets[a]),h.site.pages[d].containers[e[0]].widgets.splice(a,1)),console.log(a),console.log(b),console.log(e),console.log(d),console.log("[DataService] widget removed"),c.reload()},moveWidget:function(a,b,d){var e,f=h._translateContainerIndex(a[0],d);e=angular.copy(f[1]?h.site.containers[f[0]].widgets[a[1]]:h.site.pages[d].containers[f[0]].widgets[a[1]]),console.log(e),this.removeWidget(a[1],a[0],d),this.appendWidget(b[0],e,d,b[1]),console.log("widget moved from: "+a+" to: "+b),c.reload()},debugSite:function(){for(var a in h.site)console.log(a+":"),console.log(h.site[a]);console.log("current page containers:");for(var b=d.url,c=h.site.pages[b]?this.site.pages[b].containers:this.site.pages.home.containers,e=c.length,f=0;e>f;f++)console.log(h.site.containers[c[f]])}}}]),app.directive("container",["$rootScope","$routeParams","DataService",function(a,b,c){return{restrict:"E",templateUrl:"/views/container.html",replace:!0,link:function(a,d){var e=function(a){var b=a.parent(".container");return $(".widget",b).index(a)},f=function(a){var b=a.parent(".container");return $("#main .container").index(b)},g=function(a){return[f(a),e(a)]},h=function(a){$.data(a,"widgetCoords",g(a))},i=function(a){return $.data(a,"widgetCoords")};a.settings.editorMode&&angular.element(d).sortable({connectWith:".container",handle:".drag-handle",placeholder:"drag-placeholder",forcePlaceholderSize:!0,start:function(a,b){console.log("widget coords start:"),console.log(g(b.item)),h(b.item)},stop:function(){$(".drag-handle",d).mouseleave()},update:function(a,d){console.log("update"),d.sender||(console.log("widget coords drop:"),console.log(g(d.item)),console.log("::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"),c.moveWidget(i(d.item),g(d.item),b.url))}})}}}]),app.directive("containerSwitches",function(){return{restrict:"E",templateUrl:"/views/containerswitches.html",replace:!0,link:function(a,b){var c=$(b).parent(".container");a.settings.editorMode&&$(b).hover(function(){c.append('<div class="element-overlay" />')},function(){$(".element-overlay",c).remove()})}}}),app.directive("widget",function(){return{restrict:"E",templateUrl:"/views/widget.html",replace:!0}}),app.directive("widgetSwitches",function(){return{restrict:"E",templateUrl:"/views/widgetswitches.html",replace:!0,link:function(a,b){var c=$(b).parent(".widget");a.settings.editorMode&&$(b).hover(function(){c.append('<div class="element-overlay" />')},function(){$(".element-overlay",c).remove()})}}}),app.directive("text",function(){return{restrict:"E",templateUrl:"/views/widgets/text.html",replace:!0}}),app.directive("dynamicStyle",function(){return{restrict:"A",scope:{css:"="},templateUrl:"/views/style.html",replace:!0}}),app.filter("inArray",["$filter",function(a){return function(b,c,d){return c?a("filter")(b,function(a){return-1!=c.indexOf(a[d])}):void 0}}]),angular.module("mfAngularApp").controller("SiteCtrl",["$rootScope","$scope","$location","$routeParams","$http","DataService",function(a,b,c,d,e){b.availableLanguages={},e.get("/data/languages.json").success(function(a){b.availableLanguages=a[0]}).error(function(a,b){alert("Error loading languages.jsnon:\ndata: "+a+"\nstatus:"+b)}),b.debugSite=function(){$("body").append('<div id="mf-debug"><textarea>'+JSON.stringify(b.site,null,4)+"</textarea></div>"),$("#mf-debug").click(function(){$(this).remove()});CodeMirror.fromTextArea($("#mf-debug > textarea")[0],{mode:"application/ld+json",lineWrapping:!0});console.log(b.site)},b.$watchCollection("site",function(a,b){console.log("[SiteCtrl] watching for site changes: [oldData/newData] ----------------"),console.log(b),console.log(a),console.log("-------------------------------------------------------------------")})}]),angular.module("mfAngularApp").controller("PageCtrl",["$scope","$http","$routeParams","$location","DataService","ExtrasService",function(a,b,c,d,e){a.containers=e.getContainers(a.currentPage),a.addContainer=function(){e.addContainer()}}]),angular.module("mfAngularApp").controller("ContainerCtrl",["$scope","$http","$routeParams","$location","DataService","ExtrasService",function(a,b,c,d,e){a.removeContainer=function(){e.removeContainer(a.$index,a.currentPage)},a.setAsCustomContainer=function(){confirm("If you set container as page container all widgets will be removed.\nYou sure you wanna proceed?")&&e.setAsCustomContainer(a.$index,a.currentPage)},a.switchRow=function(){e.setRow(!a.container.row,a.$index,a.currentPage)}}]),angular.module("mfAngularApp").controller("WidgetCtrl",["$scope","$http","$routeParams","$location","DataService","ExtrasService",function(a,b,c,d,e){a.removeWidget=function(){e.removeWidget(a.$index,a.$parent.$index,a.currentPage)}}]),angular.module("mfAngularApp").controller("AddCtrl",["$scope","$http","$routeParams","$location","DataService","ExtrasService",function(a,b,c,d,e){switch(a.addMode=!0,a.addType="page",a.availableWidgets=[],b({method:"GET",url:"/data/widgets.json"}).success(function(b){console.log("---http-----"),a.availableWidgets=b,console.log(a.availableWidgets)}),a.addWidget=function(b){var f=c.container,g=a.availableWidgets[b],h={type:g.type};for(var i in a.site.languages)h[a.site.languages[i]]=g.langs;angular.extend(h,g.params),console.log("widget:"),console.log(h),e.appendWidget(f,h,a.currentPage),d.path("/edit/"+a.currentLang+"/"+a.currentPage)},Object.keys(c).length){case 2:break;case 3:a.addType="container";break;case 4:a.addType="widget";break;default:throw"[ADD] wrong params!!"}}]);