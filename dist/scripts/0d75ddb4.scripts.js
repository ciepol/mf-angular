"use strict";var app=angular.module("mfAngularApp",["ngRoute","ui.bootstrap"]);app.config(["$routeProvider","$locationProvider",function(a,b){a.when("/edit/:url/:container?/:widget?",{templateUrl:"/views/edit.html",controller:"PageCtrl"}).when("/edit",{redirectTo:"/edit/home"}).when("/add/:url/:container?/:widget?",{templateUrl:"/views/edit.html",controller:"AddCtrl"}).when("/add",{redirectTo:"/add/home"}).when("/:url",{templateUrl:"/views/page.html",controller:"PageCtrl"}).otherwise({redirectTo:"/home"}),b.html5Mode(!0)}]),app.service("ExtrasService",["$rootScope",function(){return{guid:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(a){var b=16*Math.random()|0,c="x"==a?b:3&b|8;return c.toString(16)})}}}]),app.service("DataService",["$rootScope","$http","$routeParams","ExtrasService",function(a,b,c,d){var e={site:null,availableWidgets:null,getAvailableWidgets:function(){return this.availableWidgets},getContainerGuid:function(a,b){return this.site.pages[a].containers[b]},saveSite:function(){localStorage.MF=angular.toJson(this.site,!0)},loadSite:function(){this.site=angular.fromJson(localStorage.MF),a.$broadcast("site.update")},getContainers:function(){var a=c.url;if(a&&this.site){for(var b=[],d=this.site.pages[a]?this.site.pages[a].containers:this.site.pages.home.containers,e=d.length,f=0;e>f;f++)b.push(this.site.containers[d[f]]);return b}return[]},appendContainer:function(b,d){var e=c.url;if(e&&this.site.pages[e]){var f=this.site.pages[e].containers.indexOf(b);f>-1&&this.site.pages[e].containers.splice(f,1),this.site.pages[e].containers.splice(d,0,b),console.log("container added"),console.log(this.site.pages[e].containers),console.log("*************"),a.$broadcast("site.update")}else console.log(e),console.error('"page" parameter error')},addContainer:function(a){var b=d.guid();this.site.containers[b]={guid:b,layout:!1,widgets:[]},this.appendContainer(b,a)},removeContainerByGuid:function(b){this.site.pages.length;console.log("removing container by guid");for(page in this.site.pages){console.log(page),console.log(this.site.pages[page].containers);var c=this.site.pages[page].containers.indexOf(b);c>-1&&this.site.pages[page].containers.splice(c,1),console.log(this.site.pages[page].containers)}a.$broadcast("site.update")},removeContainer:function(a){var b=c.url,d=this.site.pages[b].containers[a];delete this.site.containers[d],this.removeContainerByGuid(d)},appendWidget:function(b,d,e){var f=c.url,g=this.getContainerGuid(f,d);return e>this.site.containers[g].widgets.length?(console.error("[ADD] position bigger than array length"),!1):(this.site.containers[g].widgets.splice(e,0,b),void a.$broadcast("site.update"))},removeWidget:function(b,d){var e=c.url,f=this.getContainerGuid(e,b);this.site.containers[f].widgets.splice(d,1),a.$broadcast("site.update")}};return b({method:"GET",url:"data/data.json"}).success(function(b){e.site=b[0],console.log("----------------------uu---------"),a.$broadcast("site.update")}),b({method:"GET",url:"data/widgets.json"}).success(function(b){e.availableWidgets=b[0],console.log("------------------------------g----------"),console.log(e.availableWidgets),a.$broadcast("xxx.update")}),e}]),app.directive("container",function(){return{restrict:"E",templateUrl:"/views/container.html",replace:!0}}),app.directive("widget",function(){return{restrict:"E",templateUrl:"/views/widget.html",replace:!0}}),app.directive("text",function(){return{restrict:"E",templateUrl:"/views/widgets/text.html",replace:!0}}),angular.module("mfAngularApp").controller("PageCtrl",["$scope","$http","$routeParams","$location","DataService","ExtrasService",function(a,b,c,d,e){a.editorMode=0==d.path().search(/\/edit\/|\/add\//),a.containers=[],a.availableWidgets=[],a.page=c.url,a.lang="pl_PL",a.$on("site.update",function(){console.log("apdejt!!!"),console.log(e.site),a.containers=e.getContainers()}),a.$watch("page",function(){console.log("updejt - page chaned!"),a.containers=e.getContainers()}),a.addContainer=function(){var b=a.containers.length;e.addContainer(b)},a.removeContainer=function(a){e.removeContainer(a)},a.removeWidget=function(a,b){e.removeWidget(a,b)},a.saveSite=function(){e.saveSite()},a.loadSite=function(){e.loadSite()},a.$watchCollection("containers",function(a,b){console.log(b),console.log(a),console.log("**********")})}]),angular.module("mfAngularApp").controller("AddCtrl",["$scope","$http","$routeParams","$location","DataService","ExtrasService",function(a,b,c,d,e){switch(a.page=c.url,a.editorMode=!0,a.addMode=!0,a.addType="page",a.containers=[],a.$on("site.update",function(){console.log("apdejt!!!"),console.log(e.site),a.containers=e.getContainers()}),a.$watch("page",function(){console.log("updejt - page chaned!"),a.containers=e.getContainers()}),a.widgets=[],b({method:"GET",url:"data/widgets.json"}).success(function(b){console.log("---http-----"),a.widgets=b,console.log(a.widgets)}),a.addWidget=function(b){var f=c.container,g=c.widget;console.log("adding widget: "+b),console.log("to container: "+f);var h=a.widgets[b],i={type:h.type,pl_PL:h.langs};angular.extend(i,h.params),console.log(i),e.appendWidget(i,f,g),d.path("edit/"+c.url)},console.log(c),Object.keys(c).length){case 1:break;case 2:a.addType="container";break;case 3:a.addType="widget";break;default:console.error("[ADD] wrong params!!")}}]);